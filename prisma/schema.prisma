generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model approvals {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  document_id String    @db.Uuid
  approver_id String    @db.Uuid
  status      String    @default("pending") @db.VarChar(20)
  comment     String?
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime  @default(now()) @db.Timestamptz(6)
  users       users     @relation(fields: [approver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  documents   documents @relation(fields: [document_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([approver_id], map: "idx_approvals_approver_id")
  @@index([document_id], map: "idx_approvals_document_id")
}

model document_tags {
  document_id String    @db.Uuid
  tag_id      String    @db.Uuid
  documents   documents @relation(fields: [document_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tags        tags      @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([document_id, tag_id])
  @@index([document_id], map: "idx_document_tags_document_id")
  @@index([tag_id], map: "idx_document_tags_tag_id")
}

model documents {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String          @db.VarChar(255)
  content       String?
  file_url      String?         @db.VarChar(1024)
  created_by    String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  updated_at    DateTime        @default(now()) @db.Timestamptz(6)
  approvals     approvals[]
  document_tags document_tags[]
  users         users           @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([created_by], map: "idx_documents_created_by")
}

model tags {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String          @unique @db.VarChar(50)
  document_tags document_tags[]
}

model users {
  id         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email      String      @unique @db.VarChar(255)
  full_name  String      @db.VarChar(255)
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  updated_at DateTime    @default(now()) @db.Timestamptz(6)
  approvals  approvals[]
  documents  documents[]
}
