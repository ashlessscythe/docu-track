generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Approval {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  documentId  String    @db.Uuid
  approverId  String    @db.VarChar(255)
  status      String    @default("pending") @db.VarChar(20)
  comment     String?
  createdAt   DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime  @default(now()) @db.Timestamptz(6)
  document    Document  @relation(fields: [documentId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([approverId], map: "idx_approval_approver_id")
  @@index([documentId], map: "idx_approval_document_id")
}

model DocumentTag {
  documentId String    @db.Uuid
  tagId      String    @db.Uuid
  document   Document  @relation(fields: [documentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tag        Tag       @relation(fields: [tagId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([documentId, tagId])
  @@index([documentId], map: "idx_document_tag_document_id")
  @@index([tagId], map: "idx_document_tag_tag_id")
}

model Document {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String        @db.VarChar(255)
  content      String?
  fileUrl      String?       @db.VarChar(1024)
  createdBy    String        @db.VarChar(255)
  createdAt    DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime      @default(now()) @db.Timestamptz(6)
  approvals    Approval[]
  documentTags DocumentTag[]

  @@index([createdBy], map: "idx_document_created_by")
}

model Tag {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String        @unique @db.VarChar(50)
  documentTags DocumentTag[]
}
